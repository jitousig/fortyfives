{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Root.svelte",
    "../JSONValueNode.svelte",
    "../ErrorNode.svelte",
    "../JSONNested.svelte",
    "../JSONKey.svelte",
    "../JSONArrow.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import JsonTree from '../src/Root.svelte';\n  const placeholder = 'Type anything, eg: {\\\"foo\\\": \\\"1\\\"}, function foo(a,b) { return a + b; }, ...\"'\n  let value = '';\n  let jsonValue;\n  let error = null;\n  $: {\n    try {\n      jsonValue = new Function(`return ${value}`)();\n      error = null;\n    } catch (e) {\n      error = e;\n    }\n  }\n</script>\n<style>\n  :global(body) {\n    margin: 0;\n    padding: 0;\n  }\n  .container {\n    display: grid;\n    grid-template-areas: \"title title\" \"editor preview\";\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto 1fr;\n    height: 100vh;\n    width: 100vw;\n  }\n  .title {\n    grid-area: title;\n    margin: 0;\n    padding: 4px 8px;\n    display: flex;\n    align-items: center;\n    font-size: 18px;\n  }\n  .preview {\n    grid-area: preview;\n    padding: 8px;\n  }\n  .editor {\n    grid-area: editor;\n  }\n  .error {\n    border: 2px solid red;\n  }\n  textarea {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n  }\n  a {\n    display: flex;\n  }\n</style>\n<div class=\"container\">\n  <h1 class=\"title\">svelte-json-tree\n    &nbsp;\n    <a target=\"_blank\" href=\"https://npmjs.com/svelte-json-tree\">\n      <img alt=\"npm-version\" src=\"https://img.shields.io/npm/v/svelte-json-tree.svg\" />\n    </a>\n    &nbsp;\n    <a target=\"_blank\" href=\"https://github.com/tanhauhau/svelte-json-tree\">\n      <img alt=\"github\" src=\"https://img.shields.io/github/stars/tanhauhau/svelte-json-tree?style=social\" />\n    </a>\n  </h1>\n  <div class=\"editor\">\n    <textarea bind:value class:error {placeholder}></textarea>\n  </div>\n  <div class=\"preview\">\n    <JsonTree value={jsonValue} />\n  </div>\n</div>",
    "<script>\n  import JSONNode from './JSONNode.svelte';\n  import { setContext } from 'svelte';\n  import contextKey from './context';\n\n  setContext(contextKey, {});\n\n  export let key = '', value;\n</script>\n<style>\n  ul {\n    --string-color: var(--json-tree-string-color, #cb3f41);\n    --symbol-color: var(--json-tree-symbol-color, #cb3f41);\n    --boolean-color: var(--json-tree-boolean-color, #112aa7);\n    --function-color: var(--json-tree-function-color, #112aa7);\n    --number-color: var(--json-tree-number-color, #3029cf);\n    --label-color: var(--json-tree-label-color, #871d8f);\n    --arrow-color: var(--json-tree-arrow-color, #727272);\n    --null-color: var(--json-tree-null-color, #8d8d8d);\n    --undefined-color: var(--json-tree-undefined-color, #8d8d8d);\n    --date-color: var(--json-tree-date-color, #8d8d8d);\n    --li-identation: var(--json-tree-li-indentation, 1em);\n    --li-line-height: var(--json-tree-li-line-height, 1.3);\n    --li-colon-space: 0.3em;\n    font-size: var(--json-tree-font-size, 12px);\n    font-family: var(--json-tree-font-family, 'Courier New', Courier, monospace);\n  }\n  ul :global(li) {\n    line-height: var(--li-line-height);\n    display: var(--li-display, list-item);\n    list-style: none;\n  }\n  ul, ul :global(ul) {\n    padding: 0;\n    margin: 0;\n  }\n</style>\n<ul>\n  <JSONNode {key} {value} isParentExpanded={true} isParentArray={false} />\n</ul>\n",
    "<script>\n  import { getContext } from 'svelte';\n  import contextKey from './context';\n\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, value, valueGetter = null, isParentExpanded, isParentArray, nodeType;\n\n  const { colon } = getContext(contextKey);\n</script>\n<style>\n  li {\n    user-select: text;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n  .indent {\n    padding-left: var(--li-identation);\n  }\n  .String {\n    color: var(--string-color);\n  }\n  .Date {\n    color: var(--date-color);\n  }\n  .Number {\n    color: var(--number-color);\n  }\n  .Boolean {\n    color: var(--boolean-color);\n  }\n  .Null {\n    color: var(--null-color);\n  }\n  .Undefined {\n    color: var(--undefined-color);\n  }\n  .Function {\n    color: var(--function-color);\n    font-style: italic;\n  }\n  .Symbol {\n    color: var(--symbol-color);\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  <JSONKey {key} {colon} {isParentExpanded} {isParentArray} />\n  <span class={nodeType}>\n    {valueGetter ? valueGetter(value) : value}\n  </span>\n</li>",
    "<script>\n  import { getContext, setContext } from 'svelte';\n  import contextKey from './context';\n  import JSONArrow from './JSONArrow.svelte';\n  import JSONNode from './JSONNode.svelte';\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, value, isParentExpanded, isParentArray;\n  export let expanded = false;\n\n  $: stack = value.stack.split('\\n');\n\n  const context = getContext(contextKey);\n  setContext(contextKey, { ...context, colon: ':' })\n\n  $: if (!isParentExpanded) {\n    expanded = false;\n  }\n\n  function toggleExpand() {\n    expanded = !expanded;\n  }\n</script>\n<style>\n  li {\n    user-select: text;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n  .indent {\n    padding-left: var(--li-identation);\n  }\n  .collapse {\n    --li-display: inline;\n    display: inline;\n    font-style: italic;\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  {#if isParentExpanded}\n    <JSONArrow on:click={toggleExpand} {expanded} />\n  {/if}\n  <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} />\n  <span on:click={toggleExpand}>Error: {expanded?'':value.message}</span>\n  {#if isParentExpanded}\n    <ul class:collapse={!expanded}>\n      {#if expanded}\n        <JSONNode key=\"message\" value={value.message} />\n        <li>\n          <JSONKey key=\"stack\" colon=\":\" {isParentExpanded} />\n          <span>\n            {#each stack as line, index}\n              <span class:indent={index > 0}>{line}</span><br />\n            {/each}\n          </span>\n        </li>\n      {/if}\n    </ul>\n  {/if}\n</li>",
    "<script>\n  import { getContext, setContext } from 'svelte';\n  import contextKey from './context';\n  import JSONArrow from './JSONArrow.svelte';\n  import JSONNode from './JSONNode.svelte';\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, keys, colon = ':', label = '', isParentExpanded, isParentArray, isArray = false, bracketOpen, bracketClose;\n  export let previewKeys = keys;\n  export let getKey = key => key;\n  export let getValue = key => key;\n  export let getPreviewValue = getValue;\n  export let expanded = false, expandable = true;\n\n  const context = getContext(contextKey);\n  setContext(contextKey, { ...context, colon })\n\n  $: slicedKeys = expanded ? keys: previewKeys.slice(0, 5);\n\n  $: if (!isParentExpanded) {\n    expanded = false;\n  }\n\n  function toggleExpand() {\n    expanded = !expanded;\n  }\n\n  function expand() {\n    expanded = true;\n  }\n\n</script>\n<style>\n  label {\n    display: inline-block;\n  }\n  .indent {\n    padding-left: var(--li-identation);\n  }\n  .collapse {\n    --li-display: inline;\n    display: inline;\n    font-style: italic;\n  }\n  .comma {\n    margin-left: -0.5em;\n    margin-right: 0.5em;\n  }\n\n  label {\n    /* display: contents; */\n    position: relative;\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  <label>\n    {#if expandable && isParentExpanded}\n      <JSONArrow on:click={toggleExpand} {expanded} />\n    {/if}\n    <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} on:click={toggleExpand} />\n    <span on:click={toggleExpand}><span>{label}</span>{bracketOpen}</span>\n  </label>\n    {#if isParentExpanded}\n      <ul class:collapse={!expanded} on:click={expand}>\n        {#each slicedKeys as key, index}\n          <JSONNode key={getKey(key)} isParentExpanded={expanded} isParentArray={isArray} value={expanded ? getValue(key) : getPreviewValue(key)} />\n          {#if !expanded && index < previewKeys.length - 1}\n            <span class=\"comma\">,</span>\n          {/if}\n        {/each}\n        {#if slicedKeys.length < previewKeys.length }\n          <span>…</span>\n        {/if}\n      </ul>\n    {:else}\n      <span>…</span>\n    {/if}\n  <span>{bracketClose}</span>\n</li>",
    "<script>\n  export let key, isParentExpanded, isParentArray = false, colon = ':';\n\n  $: showKey = (isParentExpanded || !isParentArray || key != +key);\n</script>\n<style>\n  label {\n    display: inline-block;\n    color: var(--label-color);\n    padding: 0;\n  }\n  .spaced {\n    padding-right: var(--li-colon-space);\n  }\n</style>\n{#if showKey && key}\n  <label class:spaced={isParentExpanded} on:click>\n    <span>{key}{colon}</span>\n  </label>\n{/if}",
    "<script>\n  export let expanded;\n</script>\n<style>\n  .container {\n    display: inline-block;\n    cursor: pointer;\n    transform: translate(calc(0px - var(--li-identation)), -50%);\n    position: absolute;\n    top: 50%;\n    padding-right: 100%;\n  }\n  .arrow {\n    transform-origin: 25% 50%;\n    position: relative;\n    line-height: 1.1em;\n    font-size: 0.75em;\n    margin-left: 0;\n    transition: 150ms;\n    color: var(--arrow-sign);\n    user-select: none;\n    font-family: 'Courier New', Courier, monospace;\n  }\n  .expanded {\n    transform: rotateZ(90deg) translateX(-3px);\n  }\n</style>\n\n<div class=\"container\" on:click>\n  <div class=\"arrow\" class:expanded={expanded}>{'\\u25B6'}</div>\n</div>"
  ],
  "names": [],
  "mappings": "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"
}